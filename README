      webpack学习之路 
1. 安装node
2. 全局安装webpack ： npm install webpack
3. 打包文件： 命令行webpack  '要打包的文件名' '打包后的文件名'
4. 省去长串命令： 在webpack.config.js文件里配置入口和出口文件, 然后在脚本里配置"build": "webpack"
5. css文件： css-loader只负责对css文件进行加载处理，不负责将css文件引入DOM， 这时需要sytle-loader
   配合， 例如： module: {
                    rules: [
                          {
                                test: /\.css$/,
                                use: ['style-loader', 'css-loader']
                          }
                    ] 
                  }
6.  当小于limit时将会转换为base64格式，大于时需要file-loader
7.  转化为es6语法：npm install babel-loader@7 babel-core babel-preset-es2015 -D 
    这里如果是babel-preset-env的话，还需额外的配置 一个 .babelrc文件和配置    
        options: {
            presets: ['@babel/preset-env'] // 如果是babel-preset-es2015的话这里就是'es2015'
          }   
8. vue实例中既有el又有template，将会吧template的内容嵌入到el中  
9. 版权插件new webpack.BannerPlugin('版权归***所有')
10.HtmlWebpckPlugin 用于将index.html打包进dist：
      @1.  自动生成一个index.html文件（可以指定模版来生成）
	@2.  将打包的js文件，自动通过script标签插入body中
11.js压缩插件uglifyjs-webpack-plugin
12.webpack-dev-server 开发时实时监听文件（可配置监听的文件，监听的端口，是否实时监听）
13."scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "webpack",
    "dev": "webpack-dev-server" // 配置--open可以设置自动打开浏览器， 同时这里打包的文件是放在
                                // 内存中的，所以一般在磁盘中看不到
  },